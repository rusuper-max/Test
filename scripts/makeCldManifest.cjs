/* scripts/makeCldManifest.cjs */
const fs = require("fs");
const path = require("path");
require("dotenv").config({ path: ".env.local" });
const cloudinary = require("cloudinary").v2;

const { NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME, CLOUDINARY_API_KEY, CLOUDINARY_API_SECRET } = process.env;
if (!NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME || !CLOUDINARY_API_KEY || !CLOUDINARY_API_SECRET) {
  console.error("❌ Greška Cloudinary manifest: env varijable nisu postavljene (cloud_name/api_key/api_secret).");
  process.exit(1);
}

cloudinary.config({
  cloud_name: NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME,
  api_key: CLOUDINARY_API_KEY,
  api_secret: CLOUDINARY_API_SECRET,
  secure: true,
});

// Izlistaj kategorije koje koristiš
const CATS = ["vencanje", "svadbe", "studio", "rodjendani", "krstenja", "crno-belo"];

async function fetchPublicIdsForFolder(folder) {
  const out = new Set(); // dedupe po public_id
  let next_cursor = undefined;

  do {
    const res = await cloudinary.search
      .expression(`folder=${folder} AND resource_type:image`)
      .max_results(500)
      .next_cursor(next_cursor)
      .execute();

    for (const r of res.resources || []) {
      // čuvamo SAMO public_id (npr. "portfolio/studio/img_001")
      if (typeof r.public_id === "string") out.add(r.public_id);
    }
    next_cursor = res.next_cursor;
  } while (next_cursor);

  return Array.from(out).sort((a, b) => a.localeCompare(b, "sr"));
}

(async () => {
  try {
    const manifest = {};
    for (const cat of CATS) {
      const folder = `portfolio/${cat}`;
      const ids = await fetchPublicIdsForFolder(folder);
      if (ids.length) manifest[cat] = ids;
      console.log(`  - ${cat}: ${ids.length} fajlova`);
    }

    const outFile = path.join(process.cwd(), "src", "data", "portfolioManifest.ts");
    const file = `// ⚠️ AUTO-GENERATED by scripts/makeCldManifest.cjs — ne menjaj ručno
export const PORTFOLIO_MANIFEST = ${JSON.stringify(manifest, null, 2)} as const;
export type PortfolioCat = keyof typeof PORTFOLIO_MANIFEST;
export type PortfolioId = typeof PORTFOLIO_MANIFEST[PortfolioCat][number];
`;
    fs.mkdirSync(path.dirname(outFile), { recursive: true });
    fs.writeFileSync(outFile, file, "utf8");
    console.log(`✅ Cloudinary manifest generisan: ${outFile}`);
  } catch (err) {
    console.error("❌ Greška Cloudinary manifest:", err?.error || err);
    process.exit(1);
  }
})();